from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class InventoryItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, owner_id=None, item_id=None, gacha_uuid=None, obtained_date=None, owners_no=None, price_paid=None):  # noqa: E501
        """InventoryItem - a model defined in OpenAPI

        :param owner_id: The owner_id of this InventoryItem.  # noqa: E501
        :type owner_id: str
        :param item_id: The item_id of this InventoryItem.  # noqa: E501
        :type item_id: str
        :param gacha_uuid: The gacha_uuid of this InventoryItem.  # noqa: E501
        :type gacha_uuid: str
        :param obtained_date: The obtained_date of this InventoryItem.  # noqa: E501
        :type obtained_date: datetime
        :param owners_no: The owners_no of this InventoryItem.  # noqa: E501
        :type owners_no: int
        :param price_paid: The price_paid of this InventoryItem.  # noqa: E501
        :type price_paid: float
        """
        self.openapi_types = {
            'owner_id': str,
            'item_id': str,
            'gacha_uuid': str,
            'obtained_date': datetime,
            'owners_no': int,
            'price_paid': float
        }

        self.attribute_map = {
            'owner_id': 'owner_id',
            'item_id': 'item_id',
            'gacha_uuid': 'gacha_uuid',
            'obtained_date': 'obtained_date',
            'owners_no': 'owners_no',
            'price_paid': 'price_paid'
        }

        self._owner_id = owner_id
        self._item_id = item_id
        self._gacha_uuid = gacha_uuid
        self._obtained_date = obtained_date
        self._owners_no = owners_no
        self._price_paid = price_paid

    @classmethod
    def from_dict(cls, dikt) -> 'InventoryItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InventoryItem of this InventoryItem.  # noqa: E501
        :rtype: InventoryItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def owner_id(self) -> str:
        """Gets the owner_id of this InventoryItem.

        UUID of user.  # noqa: E501

        :return: The owner_id of this InventoryItem.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id: str):
        """Sets the owner_id of this InventoryItem.

        UUID of user.  # noqa: E501

        :param owner_id: The owner_id of this InventoryItem.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def item_id(self) -> str:
        """Gets the item_id of this InventoryItem.

        UUID of single item.  # noqa: E501

        :return: The item_id of this InventoryItem.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id: str):
        """Sets the item_id of this InventoryItem.

        UUID of single item.  # noqa: E501

        :param item_id: The item_id of this InventoryItem.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def gacha_uuid(self) -> str:
        """Gets the gacha_uuid of this InventoryItem.

        UUID representing a gacha  # noqa: E501

        :return: The gacha_uuid of this InventoryItem.
        :rtype: str
        """
        return self._gacha_uuid

    @gacha_uuid.setter
    def gacha_uuid(self, gacha_uuid: str):
        """Sets the gacha_uuid of this InventoryItem.

        UUID representing a gacha  # noqa: E501

        :param gacha_uuid: The gacha_uuid of this InventoryItem.
        :type gacha_uuid: str
        """

        self._gacha_uuid = gacha_uuid

    @property
    def obtained_date(self) -> datetime:
        """Gets the obtained_date of this InventoryItem.

        Timestamp of latest obtainment  # noqa: E501

        :return: The obtained_date of this InventoryItem.
        :rtype: datetime
        """
        return self._obtained_date

    @obtained_date.setter
    def obtained_date(self, obtained_date: datetime):
        """Sets the obtained_date of this InventoryItem.

        Timestamp of latest obtainment  # noqa: E501

        :param obtained_date: The obtained_date of this InventoryItem.
        :type obtained_date: datetime
        """

        self._obtained_date = obtained_date

    @property
    def owners_no(self) -> int:
        """Gets the owners_no of this InventoryItem.

        Number of previous owners of this item  # noqa: E501

        :return: The owners_no of this InventoryItem.
        :rtype: int
        """
        return self._owners_no

    @owners_no.setter
    def owners_no(self, owners_no: int):
        """Sets the owners_no of this InventoryItem.

        Number of previous owners of this item  # noqa: E501

        :param owners_no: The owners_no of this InventoryItem.
        :type owners_no: int
        """

        self._owners_no = owners_no

    @property
    def price_paid(self) -> float:
        """Gets the price_paid of this InventoryItem.

        Game currency used to buy this item  # noqa: E501

        :return: The price_paid of this InventoryItem.
        :rtype: float
        """
        return self._price_paid

    @price_paid.setter
    def price_paid(self, price_paid: float):
        """Sets the price_paid of this InventoryItem.

        Game currency used to buy this item  # noqa: E501

        :param price_paid: The price_paid of this InventoryItem.
        :type price_paid: float
        """

        self._price_paid = price_paid
