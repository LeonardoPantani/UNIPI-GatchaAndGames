openapi: 3.0.0
info:
  contact:
    email: support@gachaandgames.it
  description: |-
    API for managing gacha items, auctions, PVP battles, currency, and user authentication.

    Useful links:
    - [Project repository](https://github.com/LeonardoPantani/UNIPI-GachaAndGames)
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html#license-text
  title: Gacha System - OpenAPI 3.0
  version: 1.0.0
servers:
- description: Local server
  url: http://localhost:8080
paths:
  /auctions/health_check:
    get:
      description: Returns 200 if service is healthy.
      operationId: health_check
      responses:
        "200":
          description: Service OK
      summary: Gives information on service status.
      tags:
      - auctions
      x-openapi-router-controller: openapi_server.controllers.auctions_controller
  /auctions/bid/{auction_uuid}:
    post:
      description: "Sends a bid to an active auction, if the user has enough currency."
      operationId: bid_on_auction
      parameters:
      - explode: true
        in: cookie
        name: session
        required: true
        schema:
          type: string
        style: form
      - description: Id of the auction to bid on.
        explode: false
        in: path
        name: auction_uuid
        required: true
        schema:
          $ref: '#/components/schemas/AuctionId'
        style: simple
      - description: Bid value.
        explode: true
        in: query
        name: bid
        required: true
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          description: Bid sent successfully.
        "400":
          description: Invalid query parameters.
        "403":
          description: Auction is closed.
        "406":
          description: Insufficient funds.
        "500":
          description: Internal server error.
      summary: Bids on an active auction
      tags:
      - auctions
      x-openapi-router-controller: openapi_server.controllers.auctions_controller
  /auctions/create:
    post:
      description: Creates an auction for an item in player's inventory.
      operationId: create_auction
      parameters:
      - explode: true
        in: cookie
        name: session
        required: true
        schema:
          type: string
        style: form
      - description: The starting price of the auction.
        explode: true
        in: query
        name: starting_price
        required: false
        schema:
          default: 10
          maximum: 1000000
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: inventory_item_owner_id
        required: false
        schema:
          $ref: '#/components/schemas/UserId'
        style: form
      - explode: true
        in: query
        name: inventory_item_id
        required: false
        schema:
          $ref: '#/components/schemas/ItemId'
        style: form
      responses:
        "200":
          description: Auction created successfully.
        "400":
          description: Invalid query parameters.
        "404":
          description: Item in player's inventory not found.
        "500":
          description: Internal server error.
      summary: Creates an auction.
      tags:
      - auctions
      x-openapi-router-controller: openapi_server.controllers.auctions_controller
  /auctions/history:
    get:
      description: Returns a list of all my auctions for gacha items.
      operationId: get_auctions_history
      parameters:
      - explode: true
        in: cookie
        name: session
        required: true
        schema:
          type: string
        style: form
      - description: Page number of the list.
        explode: true
        in: query
        name: page_number
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuctionId'
                type: array
          description: List of my auctions.
        "400":
          description: Invalid query parameters
        "500":
          description: Internal server error
      summary: Retrieve history of my auctions.
      tags:
      - auctions
      x-openapi-router-controller: openapi_server.controllers.auctions_controller
  /auctions/list:
    get:
      description: Returns a list of all active auctions for gacha items.
      operationId: get_auctions_list
      parameters:
      - explode: true
        in: cookie
        name: session
        required: true
        schema:
          type: string
        style: form
      - description: Filter auctions by status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: open
          enum:
          - open
          - closed
          type: string
        style: form
      - description: Filter auctions by type of gacha item.
        explode: true
        in: query
        name: rarity
        required: false
        schema:
          $ref: '#/components/schemas/GachaRarity'
        style: form
      - description: Page number of the list.
        explode: true
        in: query
        name: page_number
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuctionId'
                type: array
          description: "List of auctions, filtered."
        "400":
          description: Invalid query parameters
        "500":
          description: Internal server error
      summary: Retrieve the list of auctions.
      tags:
      - auctions
      x-openapi-router-controller: openapi_server.controllers.auctions_controller
  /auctions/status/{auction_uuid}:
    get:
      description: Returns info on the auction with a specific id.
      operationId: get_auction_status
      parameters:
      - explode: true
        in: cookie
        name: session
        required: true
        schema:
          type: string
        style: form
      - description: The id of the auction to obtain info
        explode: false
        in: path
        name: auction_uuid
        required: true
        schema:
          $ref: '#/components/schemas/AuctionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auction'
          description: The auction required
        "404":
          description: Auction not found
        "500":
          description: Internal server error
      summary: Retrieve info on specific auction.
      tags:
      - auctions
      x-openapi-router-controller: openapi_server.controllers.auctions_controller
components:
  schemas:
    GachaRarity:
      description: Rarity level of the gacha
      enum:
      - common
      - rare
      - epic
      - legendary
      example: rare
      title: GachaRarity
      type: string
    UserId:
      description: UUID of user.
      format: uuid
      title: inventory_item_owner_id
      type: string
    AuctionStatus:
      default: active
      enum:
      - active
      - closed
      title: AuctionStatus
      type: string
    ItemId:
      description: UUID of single item.
      format: uuid
      title: inventory_item_id
      type: string
    AuctionId:
      description: UUID of the auction.
      format: uuid
      title: AuctionId
      type: string
    Auction:
      example:
        auction_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        inventory_item_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        starting_price: 0.8008282
        end_time: 2000-01-23T04:56:07.000+00:00
        inventory_item_owner_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        current_bid: 6.0274563
        status: active
        current_bidder: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        auction_uuid:
          description: UUID of the auction.
          format: uuid
          title: AuctionId
          type: string
        status:
          $ref: '#/components/schemas/AuctionStatus'
        inventory_item_owner_id:
          description: UUID of user.
          format: uuid
          title: inventory_item_owner_id
          type: string
        inventory_item_id:
          description: UUID of single item.
          format: uuid
          title: inventory_item_id
          type: string
        starting_price:
          description: Initial price set for the auction
          format: float
          title: starting_price
          type: number
        current_bid:
          description: Current highest bid
          format: float
          title: current_bid
          type: number
        current_bidder:
          description: UUID of user.
          format: uuid
          title: inventory_item_owner_id
          type: string
        end_time:
          description: "When the auction ends, in UTC timestamp"
          format: date-time
          title: end_time
          type: string
      title: Auction
      type: object
