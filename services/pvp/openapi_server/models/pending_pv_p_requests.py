from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.pv_p_request import PvPRequest
from openapi_server import util

from openapi_server.models.pv_p_request import PvPRequest  # noqa: E501

class PendingPvPRequests(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, requests=None):  # noqa: E501
        """PendingPvPRequests - a model defined in OpenAPI

        :param requests: The requests of this PendingPvPRequests.  # noqa: E501
        :type requests: List[PvPRequest]
        """
        self.openapi_types = {
            'requests': List[PvPRequest]
        }

        self.attribute_map = {
            'requests': 'requests'
        }

        self._requests = requests

    @classmethod
    def from_dict(cls, dikt) -> 'PendingPvPRequests':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PendingPvPRequests of this PendingPvPRequests.  # noqa: E501
        :rtype: PendingPvPRequests
        """
        return util.deserialize_model(dikt, cls)

    @property
    def requests(self) -> List[PvPRequest]:
        """Gets the requests of this PendingPvPRequests.


        :return: The requests of this PendingPvPRequests.
        :rtype: List[PvPRequest]
        """
        return self._requests

    @requests.setter
    def requests(self, requests: List[PvPRequest]):
        """Sets the requests of this PendingPvPRequests.


        :param requests: The requests of this PendingPvPRequests.
        :type requests: List[PvPRequest]
        """
        if requests is not None and len(requests) > 100:
            raise ValueError("Invalid value for `requests`, number of items must be less than or equal to `100`")  # noqa: E501
        if requests is not None and len(requests) < 0:
            raise ValueError("Invalid value for `requests`, number of items must be greater than or equal to `0`")  # noqa: E501

        self._requests = requests
