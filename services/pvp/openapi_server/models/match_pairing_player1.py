from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
import re
from openapi_server import util

import re  # noqa: E501

class MatchPairingPlayer1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stand_name=None, stand_stat=None):  # noqa: E501
        """MatchPairingPlayer1 - a model defined in OpenAPI

        :param stand_name: The stand_name of this MatchPairingPlayer1.  # noqa: E501
        :type stand_name: str
        :param stand_stat: The stand_stat of this MatchPairingPlayer1.  # noqa: E501
        :type stand_stat: str
        """
        self.openapi_types = {
            'stand_name': str,
            'stand_stat': str
        }

        self.attribute_map = {
            'stand_name': 'stand_name',
            'stand_stat': 'stand_stat'
        }

        self._stand_name = stand_name
        self._stand_stat = stand_stat

    @classmethod
    def from_dict(cls, dikt) -> 'MatchPairingPlayer1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MatchPairing_player1 of this MatchPairingPlayer1.  # noqa: E501
        :rtype: MatchPairingPlayer1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stand_name(self) -> str:
        """Gets the stand_name of this MatchPairingPlayer1.

        Name of the gacha  # noqa: E501

        :return: The stand_name of this MatchPairingPlayer1.
        :rtype: str
        """
        return self._stand_name

    @stand_name.setter
    def stand_name(self, stand_name: str):
        """Sets the stand_name of this MatchPairingPlayer1.

        Name of the gacha  # noqa: E501

        :param stand_name: The stand_name of this MatchPairingPlayer1.
        :type stand_name: str
        """

        self._stand_name = stand_name

    @property
    def stand_stat(self) -> str:
        """Gets the stand_stat of this MatchPairingPlayer1.

        Stat of a gacha.  # noqa: E501

        :return: The stand_stat of this MatchPairingPlayer1.
        :rtype: str
        """
        return self._stand_stat

    @stand_stat.setter
    def stand_stat(self, stand_stat: str):
        """Sets the stand_stat of this MatchPairingPlayer1.

        Stat of a gacha.  # noqa: E501

        :param stand_stat: The stand_stat of this MatchPairingPlayer1.
        :type stand_stat: str
        """
        if stand_stat is not None and not re.search(r'^[A-Ea-e]$', stand_stat):  # noqa: E501
            raise ValueError(r"Invalid value for `stand_stat`, must be a follow pattern or equal to `/^[A-Ea-e]$/`")  # noqa: E501

        self._stand_stat = stand_stat
