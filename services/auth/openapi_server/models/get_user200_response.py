from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.roles import Roles
from openapi_server import util

from openapi_server.models.roles import Roles  # noqa: E501

class GetUser200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uuid=None, email=None, role=None):  # noqa: E501
        """GetUser200Response - a model defined in OpenAPI

        :param uuid: The uuid of this GetUser200Response.  # noqa: E501
        :type uuid: str
        :param email: The email of this GetUser200Response.  # noqa: E501
        :type email: str
        :param role: The role of this GetUser200Response.  # noqa: E501
        :type role: Roles
        """
        self.openapi_types = {
            'uuid': str,
            'email': str,
            'role': Roles
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'email': 'email',
            'role': 'role'
        }

        self._uuid = uuid
        self._email = email
        self._role = role

    @classmethod
    def from_dict(cls, dikt) -> 'GetUser200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The get_user_200_response of this GetUser200Response.  # noqa: E501
        :rtype: GetUser200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> str:
        """Gets the uuid of this GetUser200Response.

        UUID of user.  # noqa: E501

        :return: The uuid of this GetUser200Response.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this GetUser200Response.

        UUID of user.  # noqa: E501

        :param uuid: The uuid of this GetUser200Response.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def email(self) -> str:
        """Gets the email of this GetUser200Response.

        The user's email.  # noqa: E501

        :return: The email of this GetUser200Response.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this GetUser200Response.

        The user's email.  # noqa: E501

        :param email: The email of this GetUser200Response.
        :type email: str
        """

        self._email = email

    @property
    def role(self) -> Roles:
        """Gets the role of this GetUser200Response.


        :return: The role of this GetUser200Response.
        :rtype: Roles
        """
        return self._role

    @role.setter
    def role(self, role: Roles):
        """Sets the role of this GetUser200Response.


        :param role: The role of this GetUser200Response.
        :type role: Roles
        """

        self._role = role
