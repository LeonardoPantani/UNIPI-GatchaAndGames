from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.match_log import MatchLog
from openapi_server.models.pv_p_request_teams import PvPRequestTeams
from openapi_server import util

from openapi_server.models.match_log import MatchLog  # noqa: E501
from openapi_server.models.pv_p_request_teams import PvPRequestTeams  # noqa: E501

class PvPRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pvp_match_uuid=None, sender_id=None, receiver_id=None, teams=None, winner_id=None, match_log=None, match_timestamp=None):  # noqa: E501
        """PvPRequest - a model defined in OpenAPI

        :param pvp_match_uuid: The pvp_match_uuid of this PvPRequest.  # noqa: E501
        :type pvp_match_uuid: str
        :param sender_id: The sender_id of this PvPRequest.  # noqa: E501
        :type sender_id: str
        :param receiver_id: The receiver_id of this PvPRequest.  # noqa: E501
        :type receiver_id: str
        :param teams: The teams of this PvPRequest.  # noqa: E501
        :type teams: PvPRequestTeams
        :param winner_id: The winner_id of this PvPRequest.  # noqa: E501
        :type winner_id: str
        :param match_log: The match_log of this PvPRequest.  # noqa: E501
        :type match_log: MatchLog
        :param match_timestamp: The match_timestamp of this PvPRequest.  # noqa: E501
        :type match_timestamp: datetime
        """
        self.openapi_types = {
            'pvp_match_uuid': str,
            'sender_id': str,
            'receiver_id': str,
            'teams': PvPRequestTeams,
            'winner_id': str,
            'match_log': MatchLog,
            'match_timestamp': datetime
        }

        self.attribute_map = {
            'pvp_match_uuid': 'pvp_match_uuid',
            'sender_id': 'sender_id',
            'receiver_id': 'receiver_id',
            'teams': 'teams',
            'winner_id': 'winner_id',
            'match_log': 'match_log',
            'match_timestamp': 'match_timestamp'
        }

        self._pvp_match_uuid = pvp_match_uuid
        self._sender_id = sender_id
        self._receiver_id = receiver_id
        self._teams = teams
        self._winner_id = winner_id
        self._match_log = match_log
        self._match_timestamp = match_timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'PvPRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PvPRequest of this PvPRequest.  # noqa: E501
        :rtype: PvPRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pvp_match_uuid(self) -> str:
        """Gets the pvp_match_uuid of this PvPRequest.

        UUID of the PvP match.  # noqa: E501

        :return: The pvp_match_uuid of this PvPRequest.
        :rtype: str
        """
        return self._pvp_match_uuid

    @pvp_match_uuid.setter
    def pvp_match_uuid(self, pvp_match_uuid: str):
        """Sets the pvp_match_uuid of this PvPRequest.

        UUID of the PvP match.  # noqa: E501

        :param pvp_match_uuid: The pvp_match_uuid of this PvPRequest.
        :type pvp_match_uuid: str
        """

        self._pvp_match_uuid = pvp_match_uuid

    @property
    def sender_id(self) -> str:
        """Gets the sender_id of this PvPRequest.

        UUID of user.  # noqa: E501

        :return: The sender_id of this PvPRequest.
        :rtype: str
        """
        return self._sender_id

    @sender_id.setter
    def sender_id(self, sender_id: str):
        """Sets the sender_id of this PvPRequest.

        UUID of user.  # noqa: E501

        :param sender_id: The sender_id of this PvPRequest.
        :type sender_id: str
        """

        self._sender_id = sender_id

    @property
    def receiver_id(self) -> str:
        """Gets the receiver_id of this PvPRequest.

        UUID of user.  # noqa: E501

        :return: The receiver_id of this PvPRequest.
        :rtype: str
        """
        return self._receiver_id

    @receiver_id.setter
    def receiver_id(self, receiver_id: str):
        """Sets the receiver_id of this PvPRequest.

        UUID of user.  # noqa: E501

        :param receiver_id: The receiver_id of this PvPRequest.
        :type receiver_id: str
        """

        self._receiver_id = receiver_id

    @property
    def teams(self) -> PvPRequestTeams:
        """Gets the teams of this PvPRequest.


        :return: The teams of this PvPRequest.
        :rtype: PvPRequestTeams
        """
        return self._teams

    @teams.setter
    def teams(self, teams: PvPRequestTeams):
        """Sets the teams of this PvPRequest.


        :param teams: The teams of this PvPRequest.
        :type teams: PvPRequestTeams
        """

        self._teams = teams

    @property
    def winner_id(self) -> str:
        """Gets the winner_id of this PvPRequest.

        UUID of user.  # noqa: E501

        :return: The winner_id of this PvPRequest.
        :rtype: str
        """
        return self._winner_id

    @winner_id.setter
    def winner_id(self, winner_id: str):
        """Sets the winner_id of this PvPRequest.

        UUID of user.  # noqa: E501

        :param winner_id: The winner_id of this PvPRequest.
        :type winner_id: str
        """

        self._winner_id = winner_id

    @property
    def match_log(self) -> MatchLog:
        """Gets the match_log of this PvPRequest.


        :return: The match_log of this PvPRequest.
        :rtype: MatchLog
        """
        return self._match_log

    @match_log.setter
    def match_log(self, match_log: MatchLog):
        """Sets the match_log of this PvPRequest.


        :param match_log: The match_log of this PvPRequest.
        :type match_log: MatchLog
        """

        self._match_log = match_log

    @property
    def match_timestamp(self) -> datetime:
        """Gets the match_timestamp of this PvPRequest.

        Match timestamp.  # noqa: E501

        :return: The match_timestamp of this PvPRequest.
        :rtype: datetime
        """
        return self._match_timestamp

    @match_timestamp.setter
    def match_timestamp(self, match_timestamp: datetime):
        """Sets the match_timestamp of this PvPRequest.

        Match timestamp.  # noqa: E501

        :param match_timestamp: The match_timestamp of this PvPRequest.
        :type match_timestamp: datetime
        """

        self._match_timestamp = match_timestamp
