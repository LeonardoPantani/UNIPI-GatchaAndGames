from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetUserInvolvedAuctionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_uuid=None, page_number=None):  # noqa: E501
        """GetUserInvolvedAuctionsRequest - a model defined in OpenAPI

        :param user_uuid: The user_uuid of this GetUserInvolvedAuctionsRequest.  # noqa: E501
        :type user_uuid: str
        :param page_number: The page_number of this GetUserInvolvedAuctionsRequest.  # noqa: E501
        :type page_number: int
        """
        self.openapi_types = {
            'user_uuid': str,
            'page_number': int
        }

        self.attribute_map = {
            'user_uuid': 'user_uuid',
            'page_number': 'page_number'
        }

        self._user_uuid = user_uuid
        self._page_number = page_number

    @classmethod
    def from_dict(cls, dikt) -> 'GetUserInvolvedAuctionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The get_user_involved_auctions_request of this GetUserInvolvedAuctionsRequest.  # noqa: E501
        :rtype: GetUserInvolvedAuctionsRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_uuid(self) -> str:
        """Gets the user_uuid of this GetUserInvolvedAuctionsRequest.

        UUID of user.  # noqa: E501

        :return: The user_uuid of this GetUserInvolvedAuctionsRequest.
        :rtype: str
        """
        return self._user_uuid

    @user_uuid.setter
    def user_uuid(self, user_uuid: str):
        """Sets the user_uuid of this GetUserInvolvedAuctionsRequest.

        UUID of user.  # noqa: E501

        :param user_uuid: The user_uuid of this GetUserInvolvedAuctionsRequest.
        :type user_uuid: str
        """

        self._user_uuid = user_uuid

    @property
    def page_number(self) -> int:
        """Gets the page_number of this GetUserInvolvedAuctionsRequest.


        :return: The page_number of this GetUserInvolvedAuctionsRequest.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number: int):
        """Sets the page_number of this GetUserInvolvedAuctionsRequest.


        :param page_number: The page_number of this GetUserInvolvedAuctionsRequest.
        :type page_number: int
        """
        if page_number is not None and page_number < 1:  # noqa: E501
            raise ValueError("Invalid value for `page_number`, must be a value greater than or equal to `1`")  # noqa: E501

        self._page_number = page_number
