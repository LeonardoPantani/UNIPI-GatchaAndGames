from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetGachaInfoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gacha_uuid=None):  # noqa: E501
        """GetGachaInfoRequest - a model defined in OpenAPI

        :param gacha_uuid: The gacha_uuid of this GetGachaInfoRequest.  # noqa: E501
        :type gacha_uuid: str
        """
        self.openapi_types = {
            'gacha_uuid': str
        }

        self.attribute_map = {
            'gacha_uuid': 'gacha_uuid'
        }

        self._gacha_uuid = gacha_uuid

    @classmethod
    def from_dict(cls, dikt) -> 'GetGachaInfoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The get_gacha_info_request of this GetGachaInfoRequest.  # noqa: E501
        :rtype: GetGachaInfoRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gacha_uuid(self) -> str:
        """Gets the gacha_uuid of this GetGachaInfoRequest.

        UUID of the gacha  # noqa: E501

        :return: The gacha_uuid of this GetGachaInfoRequest.
        :rtype: str
        """
        return self._gacha_uuid

    @gacha_uuid.setter
    def gacha_uuid(self, gacha_uuid: str):
        """Sets the gacha_uuid of this GetGachaInfoRequest.

        UUID of the gacha  # noqa: E501

        :param gacha_uuid: The gacha_uuid of this GetGachaInfoRequest.
        :type gacha_uuid: str
        """
        if gacha_uuid is None:
            raise ValueError("Invalid value for `gacha_uuid`, must not be `None`")  # noqa: E501

        self._gacha_uuid = gacha_uuid
