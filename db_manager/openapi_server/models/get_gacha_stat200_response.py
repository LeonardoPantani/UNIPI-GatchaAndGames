from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetGachaStat200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, player1_stat=None, player2_stat=None):  # noqa: E501
        """GetGachaStat200Response - a model defined in OpenAPI

        :param player1_stat: The player1_stat of this GetGachaStat200Response.  # noqa: E501
        :type player1_stat: int
        :param player2_stat: The player2_stat of this GetGachaStat200Response.  # noqa: E501
        :type player2_stat: int
        """
        self.openapi_types = {
            'player1_stat': int,
            'player2_stat': int
        }

        self.attribute_map = {
            'player1_stat': 'player1_stat',
            'player2_stat': 'player2_stat'
        }

        self._player1_stat = player1_stat
        self._player2_stat = player2_stat

    @classmethod
    def from_dict(cls, dikt) -> 'GetGachaStat200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The get_gacha_stat_200_response of this GetGachaStat200Response.  # noqa: E501
        :rtype: GetGachaStat200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player1_stat(self) -> int:
        """Gets the player1_stat of this GetGachaStat200Response.

        Value gacha stat.  # noqa: E501

        :return: The player1_stat of this GetGachaStat200Response.
        :rtype: int
        """
        return self._player1_stat

    @player1_stat.setter
    def player1_stat(self, player1_stat: int):
        """Sets the player1_stat of this GetGachaStat200Response.

        Value gacha stat.  # noqa: E501

        :param player1_stat: The player1_stat of this GetGachaStat200Response.
        :type player1_stat: int
        """
        if player1_stat is not None and player1_stat > 5:  # noqa: E501
            raise ValueError("Invalid value for `player1_stat`, must be a value less than or equal to `5`")  # noqa: E501
        if player1_stat is not None and player1_stat < 1:  # noqa: E501
            raise ValueError("Invalid value for `player1_stat`, must be a value greater than or equal to `1`")  # noqa: E501

        self._player1_stat = player1_stat

    @property
    def player2_stat(self) -> int:
        """Gets the player2_stat of this GetGachaStat200Response.

        Value gacha stat.  # noqa: E501

        :return: The player2_stat of this GetGachaStat200Response.
        :rtype: int
        """
        return self._player2_stat

    @player2_stat.setter
    def player2_stat(self, player2_stat: int):
        """Sets the player2_stat of this GetGachaStat200Response.

        Value gacha stat.  # noqa: E501

        :param player2_stat: The player2_stat of this GetGachaStat200Response.
        :type player2_stat: int
        """
        if player2_stat is not None and player2_stat > 5:  # noqa: E501
            raise ValueError("Invalid value for `player2_stat`, must be a value less than or equal to `5`")  # noqa: E501
        if player2_stat is not None and player2_stat < 1:  # noqa: E501
            raise ValueError("Invalid value for `player2_stat`, must be a value greater than or equal to `1`")  # noqa: E501

        self._player2_stat = player2_stat
