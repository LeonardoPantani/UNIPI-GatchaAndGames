from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GiveItemRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_uuid=None, owner_uuid=None, stand_uuid=None, price_paid=None):  # noqa: E501
        """GiveItemRequest - a model defined in OpenAPI

        :param item_uuid: The item_uuid of this GiveItemRequest.  # noqa: E501
        :type item_uuid: str
        :param owner_uuid: The owner_uuid of this GiveItemRequest.  # noqa: E501
        :type owner_uuid: str
        :param stand_uuid: The stand_uuid of this GiveItemRequest.  # noqa: E501
        :type stand_uuid: str
        :param price_paid: The price_paid of this GiveItemRequest.  # noqa: E501
        :type price_paid: int
        """
        self.openapi_types = {
            'item_uuid': str,
            'owner_uuid': str,
            'stand_uuid': str,
            'price_paid': int
        }

        self.attribute_map = {
            'item_uuid': 'item_uuid',
            'owner_uuid': 'owner_uuid',
            'stand_uuid': 'stand_uuid',
            'price_paid': 'price_paid'
        }

        self._item_uuid = item_uuid
        self._owner_uuid = owner_uuid
        self._stand_uuid = stand_uuid
        self._price_paid = price_paid

    @classmethod
    def from_dict(cls, dikt) -> 'GiveItemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The give_item_request of this GiveItemRequest.  # noqa: E501
        :rtype: GiveItemRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_uuid(self) -> str:
        """Gets the item_uuid of this GiveItemRequest.

        UUID of single item.  # noqa: E501

        :return: The item_uuid of this GiveItemRequest.
        :rtype: str
        """
        return self._item_uuid

    @item_uuid.setter
    def item_uuid(self, item_uuid: str):
        """Sets the item_uuid of this GiveItemRequest.

        UUID of single item.  # noqa: E501

        :param item_uuid: The item_uuid of this GiveItemRequest.
        :type item_uuid: str
        """

        self._item_uuid = item_uuid

    @property
    def owner_uuid(self) -> str:
        """Gets the owner_uuid of this GiveItemRequest.

        UUID of user.  # noqa: E501

        :return: The owner_uuid of this GiveItemRequest.
        :rtype: str
        """
        return self._owner_uuid

    @owner_uuid.setter
    def owner_uuid(self, owner_uuid: str):
        """Sets the owner_uuid of this GiveItemRequest.

        UUID of user.  # noqa: E501

        :param owner_uuid: The owner_uuid of this GiveItemRequest.
        :type owner_uuid: str
        """

        self._owner_uuid = owner_uuid

    @property
    def stand_uuid(self) -> str:
        """Gets the stand_uuid of this GiveItemRequest.

        UUID of the gacha  # noqa: E501

        :return: The stand_uuid of this GiveItemRequest.
        :rtype: str
        """
        return self._stand_uuid

    @stand_uuid.setter
    def stand_uuid(self, stand_uuid: str):
        """Sets the stand_uuid of this GiveItemRequest.

        UUID of the gacha  # noqa: E501

        :param stand_uuid: The stand_uuid of this GiveItemRequest.
        :type stand_uuid: str
        """

        self._stand_uuid = stand_uuid

    @property
    def price_paid(self) -> int:
        """Gets the price_paid of this GiveItemRequest.

        Currency spent to obtain the item.  # noqa: E501

        :return: The price_paid of this GiveItemRequest.
        :rtype: int
        """
        return self._price_paid

    @price_paid.setter
    def price_paid(self, price_paid: int):
        """Sets the price_paid of this GiveItemRequest.

        Currency spent to obtain the item.  # noqa: E501

        :param price_paid: The price_paid of this GiveItemRequest.
        :type price_paid: int
        """

        self._price_paid = price_paid
