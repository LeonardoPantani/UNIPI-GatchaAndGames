USE gacha_test_db;

CREATE TABLE USERS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    EMAIL VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    ROLE ENUM('USER', 'ADMIN') NOT NULL,
    UUID CHAR(36) UNIQUE NOT NULL
);

CREATE TABLE PROFILE (
    UUID CHAR(36) PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL,
    CURRENCY INT DEFAULT 0,
    PVP_SCORE INT DEFAULT 0,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UUID) REFERENCES USERS(UUID)
);

CREATE TABLE PACKET_TRANSACTIONS (
    USER_ID INT,
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PACKET_ID INT,
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE CURRENCY_TRANSACTIONS (
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    USER_ID INT,
    AMOUNT DECIMAL(10, 2) NOT NULL,
    TYPE ENUM('DEBIT', 'CREDIT') NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE PURCHASABLE_PACKETS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    AMOUNT_OF_GAME_CURRENCY INT NOT NULL,
    PRICE_IN_REAL_MONEY DECIMAL(10, 2) NOT NULL,
    NAME VARCHAR(255) NOT NULL
);

CREATE TABLE PVP_MATCHES (
    MATCH_ID INT AUTO_INCREMENT PRIMARY KEY,
    PLAYER_1_ID INT,
    PLAYER_2_ID INT,
    WINNER_ID INT,
    MATCH_LOG JSON,
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STANDS_USED JSON,
    FOREIGN KEY (PLAYER_1_ID) REFERENCES USERS(ID),
    FOREIGN KEY (PLAYER_2_ID) REFERENCES USERS(ID),
    FOREIGN KEY (WINNER_ID) REFERENCES USERS(ID)
);

CREATE TABLE INVENTORY (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ITEM_ID INT,
    USER_ID INT,
    STAND_ID INT,
    OBTAINED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    NUMBER_OF_OWNERS INT NOT NULL,
    PRICE_PAID DECIMAL(10, 2),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE AUCTION_TABLE (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ITEM_ID INT,
    STARTING_PRICE DECIMAL(10, 2) NOT NULL,
    CURRENT_BID DECIMAL(10, 2),
    CURRENT_BIDDER_ID INT,
    END_TIME TIMESTAMP,
    FOREIGN KEY (CURRENT_BIDDER_ID) REFERENCES USERS(ID)
);

CREATE TABLE GACHA_TYPES (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    POWER INT NOT NULL,
    SPEED INT NOT NULL,
    DURABILITY INT NOT NULL,
    PREC INT NOT NULL,
    RANG INT NOT NULL,
    POTENTIAL INT NOT NULL,
    RARITY ENUM('COMMON', 'RARE', 'EPIC', 'LEGENDARY') NOT NULL,
    IMAGE_URL VARCHAR(255),
    TIER INT NOT NULL,
    RELEASE_DATE DATE
);

CREATE TABLE LOGS (
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REQUEST TEXT NOT NULL,
    RESPONSE TEXT NOT NULL
);

CREATE TABLE FEEDBACKS (
    UUID CHAR(36) PRIMARY KEY,
    USER_ID INT,
    CONTENT TEXT NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE GACHA_POOLS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    PROBABILITIES JSON,
    ITEMS JSON
);