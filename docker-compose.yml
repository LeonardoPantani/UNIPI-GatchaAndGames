services:
  api_gateway_public:
    image: nginx:alpine
    container_name: unipi-gatchaandgames-api_gateway_public
    ports:
      - "443:443"
    volumes:
      - ./api_gateway_public/ssl:/etc/nginx/ssl/:ro
      - ./api_gateway_public/api_gateway.conf:/etc/nginx/nginx.conf:ro
      - ./favicon.ico:/usr/share/nginx/html/favicon.ico:ro
    depends_on:
      - service_admin
      - service_auction
      - service_auth
      - service_currency
      - service_feedback
      - service_gacha
      - service_inventory
      - service_profile
      - service_pvp
    restart: always
    networks:
      - public_gachaandgames_network

  api_gateway_private:
    image: nginx:alpine
    container_name: unipi-gatchaandgames-api_gateway_private
    ports:
      - "444:444"
    volumes:
      - ./api_gateway_private/ssl:/etc/nginx/ssl/:ro
      - ./api_gateway_private/api_gateway.conf:/etc/nginx/nginx.conf:ro
      - ./favicon.ico:/usr/share/nginx/html/favicon.ico:ro
    depends_on:
      - service_admin
      - service_auth
    restart: always
    networks:
      - private_gachaandgames_network

  redis:
    image: redis:latest
    container_name: unipi-gatchaandgames-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - private_gachaandgames_network
      - public_gachaandgames_network

  service_admin:
    image: service_admin
    build: ./services/admin/
    ports:
      - "8080"
    env_file: ./services/admin/.env
    volumes:
      - ./services/admin:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    tty: true
    restart: always
    networks:
      - private_gachaandgames_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  ########################## AUTH
  service_auth:
    image: service_auth
    build: ./services/auth/
    ports:
      - "8080"
    env_file: ./services/auth/.env
    volumes:
      - ./services/auth:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    depends_on:
      service_auth_db_proxy:
        condition: service_healthy
    tty: true
    restart: always
    networks:
      - public_gachaandgames_network
      - private_gachaandgames_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  service_auth_db_primary:
    build: ./databases/auth/primary/
    container_name: unipi-gatchaandgames-service_auth_db_primary
    env_file: ./databases/auth/primary/primary.env
    volumes:
      - ./databases/auth/primary/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./databases/auth/primary/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql:ro

      - ./databases/auth/primary/ssl:/etc/mysql/ssl:ro
      - service_auth_db_primary_data:/var/lib/mysql
    networks:
      - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 15s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  service_auth_db_replica:
    build: ./databases/auth/replica/
    container_name: unipi-gatchaandgames-service_auth_db_replica
    env_file: ./databases/auth/replica/replica.env
    volumes:
    - ./databases/auth/replica/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

    - ./databases/auth/replica/ssl:/etc/mysql/ssl:ro
    - service_auth_db_replica_data:/var/lib/mysql
    networks:
    - public_gachaandgames_network
    depends_on:
      service_auth_db_primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 5s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  service_auth_db_proxy:
    image: proxysql/proxysql:2.7.1
    container_name: unipi-gatchaandgames-service_auth_db_proxy
    volumes:
    - ./databases/auth/proxy/config.cnf:/etc/proxysql.cnf
    - ./databases/auth/proxy/ssl:/etc/proxysql/ssl:ro
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "6032"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    depends_on:
      service_auth_db_primary:
        condition: service_healthy
      service_auth_db_replica:
        condition: service_healthy
    restart: always
  
  ########################## AUCTION
  service_auction:
    image: service_auction
    build: ./services/auction/
    ports:
      - "8080"
    env_file: ./services/auction/.env
    volumes:
      - ./services/auction:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    tty: true
    restart: always
    networks:
      - public_gachaandgames_network
    depends_on:
      service_auction_db_proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auction/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  service_auction_db_primary:
    build: ./databases/auction/primary/
    container_name: unipi-gatchaandgames-service_auction_db_primary
    env_file: ./databases/auction/primary/primary.env
    volumes:
    - ./databases/auction/primary/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    - ./databases/auction/primary/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql:ro

    - ./databases/auction/primary/ssl:/etc/mysql/ssl:ro
    - service_auction_db_primary_data:/var/lib/mysql
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  # service_auction_db_replica:
  #   build: ./databases/auction/replica/
  #   container_name: unipi-gatchaandgames-service_auction_db_replica
  #   env_file: ./databases/auction/replica/replica.env
  #   volumes:
  #   - ./databases/auction/replica/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   - ./databases/auction/replica/ssl:/etc/mysql/ssl:ro
  #   - service_auction_db_replica_data:/var/lib/mysql
  #   networks:
  #   - public_gachaandgames_network
  #   depends_on:
  #     service_auction_db_primary:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     start_period: 5s
  #     interval: 3s
  #     timeout: 2s
  #     retries: 15
  #   restart: always
  
  service_auction_db_proxy:
    image: proxysql/proxysql:2.7.1
    container_name: unipi-gatchaandgames-service_auction_db_proxy
    volumes:
    - ./databases/auction/proxy/config.cnf:/etc/proxysql.cnf
    - ./databases/auction/proxy/ssl:/etc/proxysql/ssl:ro
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "6032"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    depends_on:
      service_auction_db_primary:
        condition: service_healthy
      # service_auction_db_replica:
      #   condition: service_healthy
    restart: always

  ########################## CURRENCY
  service_currency:
    image: service_currency
    build: ./services/currency/
    ports:
      - "8080"
    env_file: ./services/currency/.env
    volumes:
      - ./services/currency:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    tty: true
    restart: always
    networks:
      - public_gachaandgames_network
    depends_on:
      service_currency_db_proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/currency/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  service_currency_db_primary:
    build: ./databases/currency/primary/
    container_name: unipi-gatchaandgames-service_currency_db_primary
    env_file: ./databases/currency/primary/primary.env
    volumes:
    - ./databases/currency/primary/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    - ./databases/currency/primary/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql:ro

    - ./databases/currency/primary/ssl:/etc/mysql/ssl:ro
    - service_currency_db_primary_data:/var/lib/mysql
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  # service_currency_db_replica:
  #   build: ./databases/currency/replica/
  #   container_name: unipi-gatchaandgames-service_currency_db_replica
  #   env_file: ./databases/currency/replica/replica.env
  #   volumes:
  #   - ./databases/currency/replica/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   - ./databases/currency/replica/ssl:/etc/mysql/ssl:ro
  #   - service_currency_db_replica_data:/var/lib/mysql
  #   networks:
  #   - public_gachaandgames_network
  #   depends_on:
  #     service_currency_db_primary:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     start_period: 5s
  #     interval: 3s
  #     timeout: 2s
  #     retries: 15
  #   restart: always
  
  service_currency_db_proxy:
    image: proxysql/proxysql:2.7.1
    container_name: unipi-gatchaandgames-service_currency_db_proxy
    volumes:
    - ./databases/currency/proxy/config.cnf:/etc/proxysql.cnf
    - ./databases/currency/proxy/ssl:/etc/proxysql/ssl:ro
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "6032"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    depends_on:
      service_currency_db_primary:
        condition: service_healthy
      # service_currency_db_replica:
      #   condition: service_healthy
    restart: always

  ########################## FEEDBACK
  service_feedback:
    image: service_feedback
    build: ./services/feedback/
    ports:
      - "8080"
    env_file: ./services/feedback/.env
    volumes:
      - ./services/feedback:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    tty: true
    restart: always
    networks:
      - public_gachaandgames_network
    depends_on:
      service_feedback_db_proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/feedback/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  service_feedback_db_primary:
    build: ./databases/feedback/primary/
    container_name: unipi-gatchaandgames-service_feedback_db_primary
    env_file: ./databases/feedback/primary/primary.env
    volumes:
    - ./databases/feedback/primary/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    - ./databases/feedback/primary/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql:ro

    - ./databases/feedback/primary/ssl:/etc/mysql/ssl:ro
    - service_feedback_db_primary_data:/var/lib/mysql
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  # service_feedback_db_replica:
  #   build: ./databases/feedback/replica/
  #   container_name: unipi-gatchaandgames-service_feedback_db_replica
  #   env_file: ./databases/feedback/replica/replica.env
  #   volumes:
  #   - ./databases/feedback/replica/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   - ./databases/feedback/replica/ssl:/etc/mysql/ssl:ro
  #   - service_feedback_db_replica_data:/var/lib/mysql
  #   networks:
  #   - public_gachaandgames_network
  #   depends_on:
  #     service_feedback_db_primary:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     start_period: 5s
  #     interval: 3s
  #     timeout: 2s
  #     retries: 15
  #   restart: always
  
  service_feedback_db_proxy:
    image: proxysql/proxysql:2.7.1
    container_name: unipi-gatchaandgames-service_feedback_db_proxy
    volumes:
    - ./databases/feedback/proxy/config.cnf:/etc/proxysql.cnf
    - ./databases/feedback/proxy/ssl:/etc/proxysql/ssl:ro
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "6032"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    depends_on:
      service_feedback_db_primary:
        condition: service_healthy
      # service_feedback_db_replica:
      #   condition: service_healthy
    restart: always

  ########################## GACHA
  service_gacha:
    image: service_gacha
    build: ./services/gacha/
    ports:
      - "8080"
    env_file: ./services/gacha/.env
    volumes:
      - ./services/gacha:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    tty: true
    restart: always
    networks:
      - public_gachaandgames_network
    depends_on:
      service_gacha_db_proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/gacha/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  service_gacha_db_primary:
    build: ./databases/gacha/primary/
    container_name: unipi-gatchaandgames-service_gacha_db_primary
    env_file: ./databases/gacha/primary/primary.env
    volumes:
    - ./databases/gacha/primary/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    - ./databases/gacha/primary/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql:ro

    - ./databases/gacha/primary/ssl:/etc/mysql/ssl:ro
    - service_gacha_db_primary_data:/var/lib/mysql
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  # service_gacha_db_replica:
  #   build: ./databases/gacha/replica/
  #   container_name: unipi-gatchaandgames-service_gacha_db_replica
  #   env_file: ./databases/gacha/replica/replica.env
  #   volumes:
  #   - ./databases/gacha/replica/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   - ./databases/gacha/replica/ssl:/etc/mysql/ssl:ro
  #   - service_gacha_db_replica_data:/var/lib/mysql
  #   networks:
  #   - public_gachaandgames_network
  #   depends_on:
  #     service_gacha_db_primary:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     start_period: 5s
  #     interval: 3s
  #     timeout: 2s
  #     retries: 15
  #   restart: always
  
  service_gacha_db_proxy:
    image: proxysql/proxysql:2.7.1
    container_name: unipi-gatchaandgames-service_gacha_db_proxy
    volumes:
    - ./databases/gacha/proxy/config.cnf:/etc/proxysql.cnf
    - ./databases/gacha/proxy/ssl:/etc/proxysql/ssl:ro
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "6032"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    depends_on:
      service_gacha_db_primary:
        condition: service_healthy
      # service_gacha_db_replica:
      #   condition: service_healthy
    restart: always

  ########################## INVENTORY
  service_inventory:
    image: service_inventory
    build: ./services/inventory/
    ports:
      - "8080"
    env_file: ./services/inventory/.env
    volumes:
      - ./services/inventory:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    tty: true
    restart: always
    networks:
      - public_gachaandgames_network
    depends_on:
      service_inventory_db_proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/inventory/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  service_inventory_db_primary:
    build: ./databases/inventory/primary/
    container_name: unipi-gatchaandgames-service_inventory_db_primary
    env_file: ./databases/inventory/primary/primary.env
    volumes:
    - ./databases/inventory/primary/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    - ./databases/inventory/primary/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql:ro

    - ./databases/inventory/primary/ssl:/etc/mysql/ssl:ro
    - service_inventory_db_primary_data:/var/lib/mysql
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  # service_inventory_db_replica:
  #   build: ./databases/inventory/replica/
  #   container_name: unipi-gatchaandgames-service_inventory_db_replica
  #   env_file: ./databases/inventory/replica/replica.env
  #   volumes:
  #   - ./databases/inventory/replica/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   - ./databases/inventory/replica/ssl:/etc/mysql/ssl:ro
  #   - service_inventory_db_replica_data:/var/lib/mysql
  #   networks:
  #   - public_gachaandgames_network
  #   depends_on:
  #     service_inventory_db_primary:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     start_period: 5s
  #     interval: 3s
  #     timeout: 2s
  #     retries: 15
  #   restart: always
  
  service_inventory_db_proxy:
    image: proxysql/proxysql:2.7.1
    container_name: unipi-gatchaandgames-service_inventory_db_proxy
    volumes:
    - ./databases/inventory/proxy/config.cnf:/etc/proxysql.cnf
    - ./databases/inventory/proxy/ssl:/etc/proxysql/ssl:ro
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "6032"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    depends_on:
      service_inventory_db_primary:
        condition: service_healthy
      # service_inventory_db_replica:
      #   condition: service_healthy
    restart: always

  ########################## PROFILE
  service_profile:
    image: service_profile
    build: ./services/profile/
    ports:
      - "8080"
    env_file: ./services/profile/.env
    volumes:
      - ./services/profile:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    tty: true
    restart: always
    networks:
      - public_gachaandgames_network
    depends_on:
      service_profile_db_proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/profile/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  service_profile_db_primary:
    build: ./databases/profile/primary/
    container_name: unipi-gatchaandgames-service_profile_db_primary
    env_file: ./databases/profile/primary/primary.env
    volumes:
    - ./databases/profile/primary/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    - ./databases/profile/primary/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql:ro

    - ./databases/profile/primary/ssl:/etc/mysql/ssl:ro
    - service_profile_db_primary_data:/var/lib/mysql
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  # service_profile_db_replica:
  #   build: ./databases/profile/replica/
  #   container_name: unipi-gatchaandgames-service_profile_db_replica
  #   env_file: ./databases/profile/replica/replica.env
  #   volumes:
  #   - ./databases/profile/replica/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   - ./databases/profile/replica/ssl:/etc/mysql/ssl:ro
  #   - service_profile_db_replica_data:/var/lib/mysql
  #   networks:
  #   - public_gachaandgames_network
  #   depends_on:
  #     service_profile_db_primary:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     start_period: 5s
  #     interval: 3s
  #     timeout: 2s
  #     retries: 15
  #   restart: always
  
  service_profile_db_proxy:
    image: proxysql/proxysql:2.7.1
    container_name: unipi-gatchaandgames-service_profile_db_proxy
    volumes:
    - ./databases/profile/proxy/config.cnf:/etc/proxysql.cnf
    - ./databases/profile/proxy/ssl:/etc/proxysql/ssl:ro
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "6032"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    depends_on:
      service_profile_db_primary:
        condition: service_healthy
      # service_profile_db_replica:
      #   condition: service_healthy
    restart: always

  ########################## PVP
  service_pvp:
    image: service_pvp
    build: ./services/pvp/
    ports:
      - "8080"
    env_file: ./services/pvp/.env
    volumes:
      - ./services/pvp:/usr/src/app/
      - ./common/:/usr/src/app/openapi_server/helpers/
    tty: true
    restart: always
    networks:
      - public_gachaandgames_network
    depends_on:
      service_pvp_db_proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/pvp/health_check"]
      start_period: 10s
      interval: 1m
      timeout: 2s
      retries: 3
    deploy:
      replicas: 1

  service_pvp_db_primary:
    build: ./databases/pvp/primary/
    container_name: unipi-gatchaandgames-service_pvp_db_primary
    env_file: ./databases/pvp/primary/primary.env
    volumes:
    - ./databases/pvp/primary/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    - ./databases/pvp/primary/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql:ro

    - ./databases/pvp/primary/ssl:/etc/mysql/ssl:ro
    - service_pvp_db_primary_data:/var/lib/mysql
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: always
  
  # service_pvp_db_replica:
  #   build: ./databases/pvp/replica/
  #   container_name: unipi-gatchaandgames-service_pvp_db_replica
  #   env_file: ./databases/pvp/replica/replica.env
  #   volumes:
  #   - ./databases/pvp/replica/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   - ./databases/pvp/replica/ssl:/etc/mysql/ssl:ro
  #   - service_pvp_db_replica_data:/var/lib/mysql
  #   networks:
  #   - public_gachaandgames_network
  #   depends_on:
  #     service_pvp_db_primary:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     start_period: 5s
  #     interval: 3s
  #     timeout: 2s
  #     retries: 15
  #   restart: always
  
  service_pvp_db_proxy:
    image: proxysql/proxysql:2.7.1
    container_name: unipi-gatchaandgames-service_pvp_db_proxy
    volumes:
    - ./databases/pvp/proxy/config.cnf:/etc/proxysql.cnf
    - ./databases/pvp/proxy/ssl:/etc/proxysql/ssl:ro
    networks:
    - public_gachaandgames_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "6032"]
      start_period: 10s
      interval: 3s
      timeout: 2s
      retries: 15
    depends_on:
      service_pvp_db_primary:
        condition: service_healthy
      # service_pvp_db_replica:
      #   condition: service_healthy
    restart: always

  ######### STACK ELK
  logging_loki:
    image: grafana/loki:latest
    container_name: unipi-gatchaandgames-logging_loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    restart: always
    networks:
      - public_gachaandgames_network
      - private_gachaandgames_network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 3

  logging_grafana:
    image: grafana/grafana-oss:10.1.2
    container_name: unipi-gatchaandgames-logging_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./logs/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./logs/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./logs/grafana/dashboards:/var/lib/grafana/dashboards
      - ./logs/grafana/grafana.ini:/etc/grafana/grafana.ini
    env_file: ./logs/grafana/.env
    depends_on:
      - logging_loki
    restart: always
    networks:
      - private_gachaandgames_network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:3000/login"]
      interval: 10s
      timeout: 5s
      retries: 3


networks:
  private_gachaandgames_network:
  public_gachaandgames_network:
volumes:
  mysql_gachaandgames_db:
  grafana_data:
  loki_data:
  redis_data:
  service_auth_db_proxy_data:
  service_auth_db_primary_data:
  service_auth_db_replica_data:
  service_profile_db_proxy_data:
  service_profile_db_primary_data:
  service_profile_db_replica_data:
  service_currency_db_proxy_data:
  service_currency_db_primary_data:
  service_currency_db_replica_data:
  service_feedback_db_proxy_data:
  service_feedback_db_primary_data:
  service_feedback_db_replica_data:
  service_auction_db_proxy_data:
  service_auction_db_primary_data:
  service_auction_db_replica_data:
  service_gacha_db_proxy_data:
  service_gacha_db_primary_data:
  service_gacha_db_replica_data:
  service_inventory_db_proxy_data:
  service_inventory_db_primary_data:
  service_inventory_db_replica_data:
  service_pvp_db_proxy_data:
  service_pvp_db_primary_data:
  service_pvp_db_replica_data: